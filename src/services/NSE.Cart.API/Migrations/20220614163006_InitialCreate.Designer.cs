// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NSE.Cart.API.Data;

namespace NSE.Cart.API.Migrations
{
    [DbContext(typeof(CartContext))]
    [Migration("20220614163006_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("NSE.Cart.API.Model.CartClient", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("UsedVoucher")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .HasName("IDX_Client");

                    b.ToTable("CartClient");
                });

            modelBuilder.Entity("NSE.Cart.API.Model.CartItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CartId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Name")
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("NSE.Cart.API.Model.CartClient", b =>
                {
                    b.OwnsOne("NSE.Cart.API.Model.Voucher", "Voucher", b1 =>
                        {
                            b1.Property<Guid>("CartClientId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Code")
                                .HasColumnName("VoucherCode")
                                .HasColumnType("varchar(50)");

                            b1.Property<int>("DiscountType")
                                .HasColumnName("DiscountType")
                                .HasColumnType("int");

                            b1.Property<decimal?>("Percent")
                                .HasColumnName("Percent")
                                .HasColumnType("decimal(18,2)");

                            b1.Property<decimal?>("ValueDiscount")
                                .HasColumnName("ValueDiscount")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("CartClientId");

                            b1.ToTable("CartClient");

                            b1.WithOwner()
                                .HasForeignKey("CartClientId");
                        });
                });

            modelBuilder.Entity("NSE.Cart.API.Model.CartItem", b =>
                {
                    b.HasOne("NSE.Cart.API.Model.CartClient", "CartClient")
                        .WithMany("Items")
                        .HasForeignKey("CartId")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
